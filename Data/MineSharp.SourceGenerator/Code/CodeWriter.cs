using System.Text;

namespace MineSharp.SourceGenerator.Code;

public class CodeWriter
{
    private const string INDENT = "    ";

    private          int           _level = 0;
    private readonly StringBuilder _sb    = new StringBuilder();

    private string CurrentIndent => string.Concat(Enumerable.Repeat(INDENT, _level));

    public CodeWriter Write(string str)
    {
        this._sb.Append(this.CurrentIndent);
        this._sb.Append(str);
        return this;
    }

    public CodeWriter WriteLine(string str)
    {
        this.Write(str);
        this._sb.AppendLine();
        return this;
    }

    public CodeWriter WriteLine()
    {
        this._sb.AppendLine();
        return this;
    }

    public CodeWriter Disclaimer()
    {
        var comment = "This File is generated by MineSharp.SourceGenerator and should not be modified.";
        var str     = $"//{INDENT}{comment}{INDENT}//";
        var slashes = new string('/', str.Length);
        this.WriteLine(slashes);
        this.WriteLine(str);
        this.WriteLine(slashes);
        this.WriteLine();
        this.WriteLine("#pragma warning disable CS1591");
        this.WriteLine();
        return this;
    }

    public CodeWriter Begin(string str)
    {
        this.WriteLine(str);
        this.WriteLine("{");
        this._level++;
        return this;
    }

    public CodeWriter Begin()
    {
        this.WriteLine("{");
        this._level++;
        return this;
    }

    public CodeWriter Finish(bool semicolon = false, bool colon = false)
    {
        this._level--;
        this.WriteLine("}" + (semicolon ? ";" : "") + (colon ? "," : ""));
        return this;
    }

    public override string ToString()
    {
        this.WriteLine();
        this.WriteLine("#pragma warning restore CS1591");
        return this._sb.ToString();
    }
}
